services:
  #############################################
  ############## REVERSE-PROXY ################
  #############################################
  traefik:
    image: ${TRAEFIK}
    command: --api.insecure=true --providers.docker=true #Enables the web UI and tells TrÃ¦fik to listen to docker
    ports:
      - "80:80" #The HTTP port
      - "8082:8080" #The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #so Traefik can listen to the Docker events
    networks:
      - onecx-app

  #############################################
  ################# DATABASE ##################
  #############################################
  postgresdb:
    image: ${POSTGRES}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgresdb-init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.http.services.postgresdb.loadbalancer.server.port=5432"
      - "traefik.http.routers.postgresdb.rule=Host(`postgresdb`)"
    networks:
      - onecx-app

  pgadmin:
    image: ${PGADMIN}
    environment:
      PGADMIN_DEFAULT_EMAIL: capgemini@capgemini.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword
    volumes:
      - ./pgadmin-init/servers.json:/pgadmin4/servers.json
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin`)"
    networks:
      - onecx-app

  #############################################
  ################ Security ###################
  #############################################
  keycloak-app:
    image: ${KEYCLOAK}
    command:
      [
        "start-dev --import-realm",
      ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: "80"

    volumes:
      - ./keycloak-init/realm-export.json:/opt/keycloak/data/import/realm.json
    labels:
      - "traefik.http.services.keycloak-app.loadbalancer.server.port=80"
      - "traefik.http.routers.keycloak-app.rule=Host(`keycloak-app`)"
    networks:
      - onecx-app

  #############################################
  ################ OneCX apps #################
  #############################################
  tkit-portal-server:
    image: ${TKIT_PORTAL_SERVER}
    environment:
      QUARKUS_DATASOURCE_USERNAME: tkit-portal-server
      QUARKUS_DATASOURCE_PASSWORD: tkit-portal-server
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/tkit-portal-server?sslmode=disable"
      ONECX_MP_JWT_VERIFY_ISSUERS: http://keycloak-app/realms/OneCX
      ONECX_MP_JWT_VERIFY_PUBLICKEY_LOCATIONS: http://keycloak-app/realms/OneCX/protocol/openid-connect/certs/
      TKIT_APM_YAML_MP_REST_URL: http://apm:8080/tkit-apm-rs/
      TENANT_RESOLVER_API_MP_REST_URL: http://tenant-resolver:8080/
      TKIT_DATAIMPORT_ENABLED: "true"
      TKIT_DATAIMPORT_CONFIGURATIONS_PORTAL_ENABLED: "true"
      TKIT_DATAIMPORT_CONFIGURATIONS_MFE_ENABLED: "true"
      # QUARKUS_LOG_LEVEL: DEBUG
      APM_REQUIRED: "true"
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.tkit-portal-server.loadbalancer.server.port=8080"
      - "traefik.http.routers.tkit-portal-server.rule=Host(`tkit-portal-server`)"
    networks:
      - onecx-app

  onecx-document-management-ui:
    image: ${DOCUMENT_MANAGEMENT_UI}
    environment:
        APP_BASE_HREF: /
        BFF_URL: http://onecx-document-management-bff:8080/
        ONECX_PORTAL_FAVORITES_DISABLED: "false"
        ONECX_PORTAL_FEEDBACK_DISABLED: "false"
        ONECX_PORTAL_SEARCH_DISABLED: "true"
        ONECX_PORTAL_SUPPORT_TICKET_DISABLED: "true"
        ONECX_PORTAL_ANNOUNCEMENTS_DISABLED: "true"
        ONECX_PORTAL_PASSWORD_CHANGE_DISABLED: "true"
        ONECX_PORTAL_SETTINGS_DISABLED: "true"
        ONECX_PORTAL_MY_ROLES_PERMISSIONS_DISABLED: "true"
        ONECX_PORTAL_HELP_DISABLED: "true"
        TKIT_PORTAL_ID: "ADMIN"
        TKIT_PORTAL_THEME_SERVER_URL: "http://tkit-portal-server"
        KEYCLOAK_URL: http://keycloak-app/
        KEYCLOAK_REALM: OneCX
        KEYCLOAK_TOKEN_URL: http://keycloak-app/token
        MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
        MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app/realms/OneCX/protocol/openid-connect/certs
        TOKEN_ROLE_CLAIM_NAME: realm_roles
        QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-app/realms/OneCX
    labels:
      - "traefik.http.services.onecx-document-management-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-document-management-ui.rule=Host(`onecx-document-management-ui`)"
    networks:
      - onecx-app


  onecx-document-management-bff:
    image: ${DOCUMENT_MANAGEMENT_BFF}
    environment:
        DOCUMENTMGMT_MP_REST_URL: "http://onecx-document-management-svc:8080"
        DOCUMENTMGMT_MP_REST_FORWARD_HEADERS: "true"
        APM_MP_REST_URL: "http://apm:8080/tkit-apm-rs/v2"
        TKITPORTALSERVER_MP_REST_URL: "http://tkit-portal-server"
        QUARKUS_TKIT_LOG_CONSOLE_JSON: 'false'
        KEYCLOAK_TOKEN_URL: http://keycloak-app/token
        KEYCLOAK_URL: http://keycloak-app/
        KEYCLOAK_REALM: OneCX
        MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
        MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app/realms/OneCX/protocol/openid-connect/certs
        TOKEN_ROLE_CLAIM_NAME: realm_roles
        QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-app/realms/OneCX
#        QUARKUS_OIDC_ENABLED: "false"
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-document-management-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-document-management-bff.rule=Host(`onecx-document-management-bff`)"
    networks:
      - onecx-app

  onecx-document-management-svc:
    image: ${DOCUMENT_MANAGEMENT_SVC}
    environment:
      QUARKUS_DATASOURCE_USERNAME: "documentmanagement"
      QUARKUS_DATASOURCE_PASSWORD: "documentmanagement"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/documentmanagement?sslmode=disable"
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-app/realms/OneCX      
      QUARKUS_MINIO_ACCESS_KEY: minioadmin
      QUARKUS_MINIO_SECRET_KEY: minioadmin
      QUARKUS_MINIO_URL: http://minio:9000
      MINIO_BUCKET_FOLDER: onecx-document-management
      QUARKUS_MINIO_REGION: us-east-2
      QUARKUS_TKIT_LOG_CONSOLE_JSON: 'false'
      TKIT_LOG_JSON_ENABLED: 'false'      
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-document-management-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-document-management-svc.rule=Host(`onecx-document-management-svc`)"
    networks:
      - onecx-app




  apm:
    image: ${APM}
    environment:
      QUARKUS_DATASOURCE_USERNAME: apm
      QUARKUS_DATASOURCE_PASSWORD: apm
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/apm?sslmode=disable"
      MP_JWT_VERIFY_ISSUER: http://keycloak-app/realms/OneCX
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: http://keycloak-app/realms/OneCX/protocol/openid-connect/certs
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.apm.loadbalancer.server.port=8080"
      - "traefik.http.routers.apm.rule=Host(`apm`)"
    networks:
      - onecx-app

  minio:
    image: ${MINIO}
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    expose:
      - 9000
      - 9001
    labels:
      - "test.property.minio.url=http://$${host:minio}:$${port:minio:9000}"
      - "test.property.minio.accesskey=minioadmin"
      - "test.property.minio.secretkey=minioadmin"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.rule=Host(`minio`)"           
    command:
      - server
      - /data
      - --console-address
      - ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    networks:
      - onecx-app
      
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/onecx-document-management;
      /usr/bin/mc policy set public myminio/onecx-document-management;
      exit 0;
      "
    networks:
      - onecx-app      

volumes:
  postgres:

networks:
  onecx-app: